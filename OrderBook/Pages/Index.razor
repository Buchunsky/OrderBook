@page "/"
@using OrderBook.Services.Interfaces
@using OrderBook.Models
@using OrderBook.Models.OrderBook

@inject IBitstampService Service;

<div class="view-container">
    <CurrencyInput Bids="Bids"></CurrencyInput>
    <OrderBookView Bids="Bids" Asks="Asks"></OrderBookView>
</div>

@code{
    
    public List<OrderBookRecordModel> Bids { get; set; } = [];
    public List<OrderBookRecordModel> Asks { get; set; } = [];
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            Service.OnDataReceived += OnDataReceived;
            await Service.ConnectAndStartReceivingOrderBook("btceur");
        }

        await base.OnAfterRenderAsync(firstRender);
    }
    
    private void OnDataReceived(object sender, OrderBookModel data)
    {
        Bids = data.Bids.OrderByDescending(x => x.CurrencyAmount / x.EurPrice).ToList();
        Asks = data.Asks.OrderBy(x => x.CurrencyAmount / x.EurPrice).ToList();
        StateHasChanged();
    }
}